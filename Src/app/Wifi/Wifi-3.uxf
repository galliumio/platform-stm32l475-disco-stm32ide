<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=11
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>12</zoom_level>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>36</x>
      <y>12</y>
      <w>1008</w>
      <h>552</h>
    </coordinates>
    <panel_attributes>Connected
--
entry/ start m_dataPollTimer(once)
exit/ stop m_dataPollTimer

WIFI_WRITE_REQ
/ while (m_dataOutFifo not empty)
     writeLen = m_dataOutFifo-&gt;GetUsedBlockCount(),
     writeLen = MIN(MAX_SEND_LEN, writeLen),
     ES_WIFI_SendData(m_dataOutFifo-&gt;GetReadAddr(), writeLen),
     if (send data failed) failed = true, break
     m_dataOutFifo-&gt;IncReadIndex(writeLen)
  if (failed) Raise(DISCONNECTED)
  else Raise(WIFI_EMPTY_IND)   
  
DATA_POLL_TIMER
/ totalLen = 0;
  do
    readLen = m_dataInFifo-&gt;GetAvailBlockCount(),
    if (readLen)
      ES_WIFI_ReceiveData(m_dataInFifo-&gt;GetWriteAddr(), readLen, &amp;recvLen),
      if (receive data failed) failed = true, break
      m_dataInFifo-&gt;IncWriteIndex(recvLen);
      totalLen += recvLen;
  while(readLen &amp;&amp; (recvLen == readLen))
  if (failed) Raise(DISCONNECTED)
  else if (totalLen) Send(WIFI_DATA_IND, m_client)
  start dataPollTimer(once)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>708</x>
      <y>72</y>
      <w>300</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>GetUsedBlockCount() returns the
max length of the next contiguous
used block.

GetAvailBlockCount() returns the 
max length of the next contiguous
available block
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>708</x>
      <y>240</y>
      <w>300</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>Note - Cannot check "wasEmpty" to
skip sending WIFI_DATA_IND since
receive data function is not
called in crit-sect.

WIFI_READ_MORE_REQ triggers Wifi
to read more data when the
m_dataInFifo is emptied by the
client. It is not used since it
uses polling.
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>708</x>
      <y>444</y>
      <w>300</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>dataPollTimer is (re)started 
"once" each time to avoid event
queue from overflowing when 
ES_WIFI_SendData() blocks for a
few seconds.
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>468</x>
      <y>72</y>
      <w>192</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>WIFI_WRITE_REQ does
not require CFM.
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>468</x>
      <y>168</y>
      <w>192</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>To avoid hogging may
send reminder before
out fifo is emptied.
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
