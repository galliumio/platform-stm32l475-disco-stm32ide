<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=11
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced

//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>1530</w>
      <h>1450</h>
    </coordinates>
    <panel_attributes>System::Root
--
entry/ setup global peripherals for normal power mode
SYSTEM_START_REQ/ SendCfm(SYSTEM_START_CFM(STATE))


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>530</x>
      <y>80</y>
      <w>410</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Stopped
--
SYSTEM_STOP_REQ/ SendCfm(SYSTEM_STOP_CFM(SUCCESS))

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>190</x>
      <y>1160</y>
      <w>1080</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>Started
--
exit/ stop m_idleCntTimer
IDLE_CNT_TIMER
/ idleCnt = GetIdleCnt() limited by m_maxIdleCnt
  m_cpuUtilPercent = 100 - (idleCnt * 100 / m_maxIdleCnt)
  print result
SYSTEM_CPU_UTIL_REQ(enable)
/ if (enable)
    GetIdleCnt(), restart periodic m_idleCntTimer
  else stop m_idleCntTimer
GPIO_IN_PULSE_IND / Send(TRAFFIC_CAR_NS_REQ) 
GPIO_IN_HOLD_IND / Send(TRAFFIC_CAR_EW_REQ) 


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>890</x>
      <y>280</y>
      <w>570</w>
      <h>570</h>
    </coordinates>
    <panel_attributes>Stopping
--
entry/ start m_stateTimer,
exit/ stop m_stateTimer, recall

SYSTEM_RESET_REQ, SYSTEM_STOP_REQ
/ defer


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>350</x>
      <y>130</y>
      <w>200</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>180.0;10.0;10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>530</y>
      <w>310</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;290.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>350</x>
      <y>1060</y>
      <w>30</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>660</x>
      <y>40</y>
      <w>20</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>670</x>
      <y>40</y>
      <w>80</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>930</x>
      <y>130</y>
      <w>220</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>200.0;150.0;200.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>920</x>
      <y>210</y>
      <w>20</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>type=final</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>920</x>
      <y>220</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1110</x>
      <y>840</y>
      <w>440</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>420.0;110.0;10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>360</x>
      <y>200</y>
      <w>140</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>SYSTEM_RESET_REQ,
SYSTEM_START_REQ
/ m_inEvt = req
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>620</x>
      <y>490</y>
      <w>250</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>FAILED, STATE_TIMER
/ SendCfm(SYSTEM_START_CFM(error),
          m_inEvt)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1130</x>
      <y>200</y>
      <w>50</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>DONE
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>780</x>
      <y>240</y>
      <w>160</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>FAILED, STATE_TIMER
/ FW_ASSERT(0)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>360</x>
      <y>1090</y>
      <w>340</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>DONE
/ SendCfm(SYSTEM_START_CFM(SUCCESS), m_inEvt)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1180</x>
      <y>900</y>
      <w>150</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>SYSTEM_RESTART_REQ,
SYSTEM_STOP_REQ
/ defer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>70</x>
      <y>280</y>
      <w>540</w>
      <h>790</h>
    </coordinates>
    <panel_attributes>Starting
--
entry/ start m_stateTimer
exit/ stop m_stateTimer
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>100</x>
      <y>520</y>
      <w>480</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>Starting1
--
entry
/ SendReq(COMPOSITE_ACT_START_REQ), SendReq(SIMPLE_ACT_START_REQ),
  SendReq(DEMO_START_REQ), SendReq(WASH_START_REQ),
  SendReq(TRAFFIC_START_REQ), // Compiler option
  SendReq(GPIO_IN_START_REQ), SendReq(GPIO_OUT_START_REQ), 
  SendReq(NODE_START_REQ(SRV_DOMAIN, SRV_PORT))

COMPOSITE_ACT_START_CFM, SIMPLE_ACT_START_CFM,
DEMO_START_CFM, WASH_START_CFM, TRAFFIC_START_CFM,
GPIO_IN_START_CFM, GPIO_OUT_START_CFM, NODE_START_CFM
/ if (!CheckCfm()) Raise(FAILED(error))
  else if (allReceived) Raise(NEXT)
    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>100</x>
      <y>750</y>
      <w>480</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Starting2
--
entry/ SendReq(SENSOR_START_REQ)

SENSOR_START_CFM
/ if (!CheckCfm()) Raise(FAILED(error))
  else if (allReceived) Raise(NEXT)
    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>350</x>
      <y>690</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>360</x>
      <y>710</y>
      <w>50</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>NEXT
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>100</x>
      <y>920</y>
      <w>480</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Starting3
--
entry/ LEVEL_METER_START_REQ // Compiler option
       
LEVEL_METER_START_CFM
/ if (!CheckCfm()) Raise(FAILED(error))
  else if (allReceived) Raise(DONE)
    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>350</x>
      <y>860</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>360</x>
      <y>880</y>
      <w>50</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>NEXT
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>920</x>
      <y>380</y>
      <w>510</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>Stopping2
--
entry/ SendReq(COMPOSITE_ACT_STOP_REQ), SendReq(SIMPLE_ACT_STOP_REQ),
       SendReq(DEMO_STOP_REQ, SendReq(WASH_STOP_REQ), 
       SendReq(TRAFFIC_STOP_REQ),
       SendReq(GPIO_IN_STOP_REQ), SendReq(GPIO_OUT_STOP_REQ),
       SendReq(NODE_STOP_REQ), SendReq(SENSOR_STOP_REQ)

COMPOSITE_ACT_STOP_CFM, SIMPLE_ACT_STOP_CFM,
DEMO_STOP_CFM, WASH_STOP_CFM, TRAFFIC_STOP_CFM,
GPIO_IN_STOP_CFM, GPIO_OUT_STOP_CFM,
NODE_STOP_CFM, SENSOR_STOP_CFM
/ if (!CheckCfm()) Raise(FAILED(error))
  else if (allReceived) Raise(DONE)
    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>920</x>
      <y>660</y>
      <w>510</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Stopping1
--
entry/ SendReq(LEVEL_METER_STOP_REQ)

LEVEL_METER_STOP_CFM
/ if (!CheckCfm()) Raise(FAILED(error))
  else if (allReceived) Raise(NEXT)
    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1110</x>
      <y>580</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1120</x>
      <y>610</y>
      <w>50</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>NEXT
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>440</x>
      <y>330</y>
      <w>20</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>450</x>
      <y>330</y>
      <w>80</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1200</x>
      <y>620</y>
      <w>20</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1210</x>
      <y>620</y>
      <w>80</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>100</x>
      <y>370</y>
      <w>480</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Prestarting
--
entry/ GetIdleCnt(), start m_idleCntTimer
exit/ stop m_idleCntTimer
IDLE_CNT_TIMER
/ m_maxIdleCnt = GetIdleCnt() * scaleFactor,
  Raise(NEXT)
    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>350</x>
      <y>460</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>360</x>
      <y>480</y>
      <w>50</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>NEXT
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
