<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=11
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>9</zoom_level>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>135</x>
      <y>45</y>
      <w>1089</w>
      <h>783</h>
    </coordinates>
    <panel_attributes>Node::Root
--
entry/ initialize NodeParser region
NODE_START_REQ/ SendCfm(NODE_START_CFM(STATE))


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>549</x>
      <y>108</y>
      <w>252</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>Stopped
--
NODE_STOP_REQ 
/ SendCfm(NODE_STOP_CFM(SUCCESS))

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>288</x>
      <y>585</y>
      <w>756</w>
      <h>207</h>
    </coordinates>
    <panel_attributes>Started
--

symbol=substate
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>819</x>
      <y>306</y>
      <w>342</w>
      <h>198</h>
    </coordinates>
    <panel_attributes>Stopping
--
entry/ start stateTimer,
       SendReq(WIFI_STOP_REQ)
exit/ stop stateTimer, recall

NODE_STOP_REQ/ defer

WIFI_STOP_CFM
/ if (!CheckCfm()) Raise(FAILED(error))
  else if (allReceived) Raise(DONE)
    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>189</x>
      <y>306</y>
      <w>342</w>
      <h>198</h>
    </coordinates>
    <panel_attributes>Starting
--
entry/ start stateTimer,
       SendReq(WIFI_START_REQ)
exit/ stop stateTimer

WIFI_START_CFM
/ if (!CheckCfm()) Raise(FAILED(error))
  else if (allReceived) Raise(DONE)
   
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>333</x>
      <y>153</y>
      <w>234</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>240.0;10.0;10.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>522</x>
      <y>396</y>
      <w>315</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;330.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>333</x>
      <y>495</y>
      <w>27</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>576</x>
      <y>72</y>
      <w>117</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0;110.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>792</x>
      <y>153</y>
      <w>216</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>220.0;170.0;220.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>846</x>
      <y>225</y>
      <w>18</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>type=final</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>846</x>
      <y>234</y>
      <w>27</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>981</x>
      <y>495</y>
      <w>261</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>270.0;70.0;10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>342</x>
      <y>216</y>
      <w>198</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>NODE_START_REQ
/ m_inEvt = req,
  m_domain = req.GetDomain(),
  m_port = req.GetPort()         
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>540</x>
      <y>369</y>
      <w>270</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>FAILED, STATE_TIMER
/ SendCfm(NODE_START_CFM(error), m_inEvt)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>990</x>
      <y>216</y>
      <w>225</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>DONE
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>729</x>
      <y>261</y>
      <w>144</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>FAILED, STATE_TIMER
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>342</x>
      <y>531</y>
      <w>279</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>DONE
/ SendCfm(NODE_START_CFM(SUCCESS), m_inEvt)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>855</x>
      <y>531</y>
      <w>144</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>NODE_STOP_REQ/ defer
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>576</x>
      <y>72</y>
      <w>18</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>153</x>
      <y>99</y>
      <w>171</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>Responsible for managing a node in a network.
It connects to a server, sends and receives 
messages to/from the server over TCP/SSL.

style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
